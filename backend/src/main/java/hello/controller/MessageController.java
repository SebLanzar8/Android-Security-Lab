package hello.controller;

import hello.dbStructure.Message;
import hello.dbStructure.User;
import hello.repositories.MessageRepository;
import hello.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Collection;
import java.util.Map;

@RestController
public class MessageController {

    @Autowired // Which is auto-generated by Spring, we will use it to handle the data
    private MessageRepository messageRepository;
    @Autowired
    private UserRepository userRepository;

    class MessageStat{
        String result;
        public MessageStat(String reult){
            this.result = result;
        }

        public String getResult() {
            return result;
        }

        public void setResult(String result) {
            this.result = result;
        }
    }

    @PostMapping("/sendMessage")
    @ResponseBody
    public MessageStat send(@RequestBody Map<String, String> payload,@CookieValue("sessionToken") String sessionToken) {

        if(sessionToken == null){
            return null;
        }

        Message msg = new Message();
        int id = userRepository.getId(sessionToken);
        msg.setIdSender(id);
        msg.setIdConversation(Integer.valueOf(payload.get("idConversation")));
        msg.setMessage(payload.get("message"));
        messageRepository.save(msg);
        return new MessageStat("ok");

    }


    @GetMapping("/getMessage/{idConversation}")

    public Collection<Message> updateMsg(@PathVariable(value="idConversation") Integer id, @CookieValue("sessionToken") String sessionToken) {

        if(sessionToken == null){
            return null;
        }

        return messageRepository.getMyMessage(id);

    }

}

